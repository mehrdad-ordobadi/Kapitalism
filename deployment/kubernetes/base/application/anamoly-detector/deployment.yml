apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-detector
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: anomaly-detector
  template:
    metadata:
      labels:
        app: anomaly-detector
    spec:
      initContainers:
      - name: linkerd-wait
        image: busybox
        command: ['sh', '-c', 'until nc -z linkerd-dst.linkerd.svc.cluster.local 8086; do echo waiting for linkerd; sleep 5; done;']
      - name: wait-for-dependencies
        image: busybox
        command: ['sh', '-c', 'until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done;']
      containers:
      - name: anomaly-detector
        image: mehrdadfordobadi/kapitalism-anomaly
        resources:
          requests:
            cpu: "30m"
            memory: "60Mi"
          limits:
            cpu: "40m" 
            memory: "80Mi"
        ports:
        - containerPort: 8120
        env:
        - name: TARGET_ENV
          value: "test"
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: logs
          mountPath: /logs
        - name: data
          mountPath: /data
      volumes:
      - name: config
        configMap:
          name: anomaly-config
      - name: logs
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: anomaly-data